plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.3-SNAPSHOT" apply false
}

architectury {
    minecraft = minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
//        mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        if (Boolean.parseBoolean(isMojangMapping)) {
            mappings loom.layered() {
                officialMojangMappings()
                if (Boolean.parseBoolean(useParchment)) {
                    parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_data}@zip")
                }
            }
        } else {
            mappings "net.fabricmc:yarn:1.20.1+build.10:v2"
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = archives_base_name
    version = mod_version
    group = maven_group

    repositories {
        // To use SML, you need to add the FelNullMaven repository

        def repositories_ = repositories_list.split(",")
        for (final String repository in repositories_ ) {
            maven {
                url = repository.replace("<", "").replace(">", "")
            }
        }
//        maven {
//            name = "FelNull Maven"
//            url = "https://maven.felnull.dev"
//        }
//        maven {
//            url = "https://maven.terraformersmc.com/releases"
//        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release.set(17)
    }

    java {
        withSourcesJar()
    }
}
